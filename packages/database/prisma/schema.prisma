// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  binaryTargets = ["native", "linux-arm64-openssl-1.1.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                String          @id @default("")
  identityAddress   String          @unique
  accountAddress    String          @unique
  
  events            Event[]
  notifications     Notification[]
  phoneNumber       UserPhoneNumber?
  completedQuestRequirements CompletedQuestRequirement[]
}

model UserPhoneNumber {
  userId          String    @unique
  phoneNumber     String    @id @unique
  createdAt       DateTime  @default(now())

  user            User      @relation(fields: [userId], references: [id])
}

model Challenge {
  challenge         String          @id
  createdAt         DateTime        @default(now())
}

model Event {
  transactionId     String          @id
  id                String
  questId           String?
  userId            String
  createdAt         DateTime        @default(now())
  processedAt       DateTime?

  user              User            @relation(fields: [userId], references: [id])
}

model Notification {
  id                Int             @id @default(autoincrement()) 
  userId            String
  createdAt         DateTime        @default(now())
  seenAt            DateTime?
  data              Json

  user              User            @relation(fields: [userId], references: [id])
} 

model CompletedQuestRequirement {
  questId         String
  userId          String
  requirementId   String
  createdAt       DateTime        @default(now())
  
  user            User            @relation(fields: [userId], references: [id])
  
  @@id([questId, userId, requirementId])
}

model QuestProgress {
  questId           String
  userId            String  
  progress          Int             @default(0)
  status            QuestStatus     @default(IN_PROGRESS)

  @@id([questId, userId])
}

enum QuestStatus {
  IN_PROGRESS
  REWARDS_DEPOSITED
  REWARDS_CLAIMED
  COMPLETED
}
